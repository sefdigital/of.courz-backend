scalar Date
scalar DateTime
scalar URL
scalar ObjectId

# - - - - - - - - - - - -
# WORKSHOP
# - - - - - - - - - - - -

enum Visiblity {
    VISIBLE,
    HIDDEN,
    CHECK_PENDING
}

type Workshop {
    _id: ObjectId!
    title: String!
    subTitle: String
    organizer: User!
    visibility: Visiblity!

    takeaway: String!
    description: String!
    content: String
    requirements: String

    categories: [String!]!
    thumbnail: URL!
    events: [Event!]!
    ratings: [Rating!]!
}

input WorkshopInput {
    title: String!
    subTitle: String

    takeaway: String!
    description: String!
    content: String
    requirements: String

    categories: [String!]!
    thumbnail: URL!
    events: [EventInput!]!
}

type Event {
    _id: ObjectId!
    visibility: Visiblity!
    price: Int!
    notes: String
    publicLocation: String!
    privateLocation: String
    maxParticipants: Int!
    currentParticipants: Int!
    dates: [WorkshopDateInterval!]!
}

input EventInput {
    price: Int
    notes: String
    publicLocation: String!
    privateLocation: String
    maxParticipants: Int!
    dates: [WorkshopDateIntervalInput!]!
}

type WorkshopDateInterval {
    startTime: String!
    endTime: String!
}

input WorkshopDateIntervalInput {
    startTime: String
    endTime: String
}

# - - - - - - - - - - - -
# Ratings
# - - - - - - - - - - - -

type Rating {
    _id: ObjectId!
    author: User
    organizerRating: OrganizerRating!
    workshopRating: WorkshopRating!
    text: String
    improveable: String
}

type OrganizerRating {
    friendly: Boolean!
    reliable: Boolean!
    knowledge: Boolean!
    patience: Boolean!
    rating: Int!
}

type WorkshopRating {
    recommendable: Boolean!
    content: Boolean!
    entertaining: Boolean!
    rating: Int!
}

input RatingInput {
    organizerRating: OrganizerRatingInput!
    workshopRating: WorkshopRatingInput!
    text: String
    improveable: String
}

input OrganizerRatingInput {
    friendly: Boolean!
    reliable: Boolean!
    knowledge: Boolean!
    patience: Boolean!
    rating: Int!
}

input WorkshopRatingInput {
    recommendable: Boolean!
    content: Boolean!
    entertaining: Boolean!
    rating: Int!
}

# - - - - - - - - - - - -
# USER
# - - - - - - - - - - - -

type User {
    _id: ID!
    firstName: String!
    lastName: String!
    organizer: Boolean!
    profilePicture: URL
    occupation: String
    birthday: Date
    email: String
    contact: ContactInfos
}

input UserInput {
    firstName: String
    lastName: String
    organizer: Boolean
    profilePicture: URL
    occupation: String
    birthday: Date
    contact: ContactInfosInput
}

type ContactInfos {
    whatsapp: URL
    messenger: URL
}

input ContactInfosInput{
    whatsapp: URL
    messenger: URL
}

# - - - - - - - - - - - -
# PAYMENTS
# - - - - - - - - - - - -

type Order {
    _id: ID!
    workshop: Workshop!
    event: Event!
    user: User!
    price: Int!
    status: String!
    participants: Int!
    timestamp: DateTime!
}

type Query {

    # WORKSHOPS
    allWorkshops: [Workshop]

    # USER
    me: User

    # PAYMENTS
    getOrderDetails(id: String!): Order
    myOrders: [Order!]!
}

type Mutation {

    # WORKSHOPS
    addWorkshop(workshop: WorkshopInput): Workshop
    addRating(workshop: ObjectId! rating: RatingInput!): Rating

    # USER
    updateUserData(user: UserInput): User!

    # PAYMENTS
    createOrder(workshopID: ObjectId!, eventID: ObjectId!, participants: Int!, affiliate: String): String # returns order id
}