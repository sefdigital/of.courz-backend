# - - - - - - - - - - - -
# WORKSHOP
# - - - - - - - - - - - -

type Workshop {
    _id: ID!
    title: String!
    subTitle: String
    organizer: User
    description: String!
    material: String
    requirements: String
    categories: [String!]!
    thumbnail: String!
    events: [Event!]!
}

input WorkshopInput {
    title: String!
    subTitle: String
    description: String!
    material: String
    requirements: String
    categories: [String!]!
    thumbnail: String!
    events: [EventInput!]!
}

type Event {
    _id: ID!
    price: Float
    notes: String
    publicLocation: String!
    privateLocation: String
    maxParticipants: Int!
    dates: [Date!]!
}

input EventInput {
    price: Float
    notes: String
    publicLocation: String!
    privateLocation: String
    maxParticipants: Int!
    dates: [DateInput!]!
}

type Date {
    startTime: String!
    endTime: String!
}

input DateInput {
    startTime: String
    endTime: String
}

# - - - - - - - - - - - -
# USER
# - - - - - - - - - - - -

type User {
    firstName: String!
    lastName: String!
}

# - - - - - - - - - - - -
# PAYMENTS
# - - - - - - - - - - - -


type Query {

    # WORKSHOPS
    workshops: [Workshop]
}

type Mutation {

    # WORKSHOPS
    addWorkshop(workshop: WorkshopInput): Workshop
    addCategory(name: String!): String

    # PAYMENTS
    createOrder(workshopID: String!, eventID: String!, participants: Int!, affiliate: String): String # returns order id

}